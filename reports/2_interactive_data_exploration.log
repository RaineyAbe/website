Traceback (most recent call last):
  File "/srv/conda/envs/notebook/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/srv/conda/envs/notebook/lib/python3.8/site-packages/nbclient/client.py", line 1107, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/srv/conda/envs/notebook/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/srv/conda/envs/notebook/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/srv/conda/envs/notebook/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/srv/conda/envs/notebook/lib/python3.8/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/srv/conda/envs/notebook/lib/python3.8/site-packages/nbclient/client.py", line 852, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/srv/conda/envs/notebook/lib/python3.8/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# load SNOTEL depth & swe into dictionaries

# define empty dicts
snotel_depth = {}
snotel_swe = {}

# loop over states and load SNOTEL data
for state in snotel.keys():
    print(f"Loading state {state}")
    snotel_depth[state] = load_snotel_txt(state, 'depth')
    snotel_swe[state] = load_snotel_txt(state, 'swe')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mClientError[0m                               Traceback (most recent call last)
[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/s3fs/core.py[0m in [0;36m_call_s3[0;34m(self, method, *akwarglist, **kwargs)[0m
[1;32m    245[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 246[0;31m                 [0mout[0m [0;34m=[0m [0;32mawait[0m [0mmethod[0m[0;34m([0m[0;34m**[0m[0madditional_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    247[0m                 [0;32mreturn[0m [0mout[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/aiobotocore/client.py[0m in [0;36m_make_api_call[0;34m(self, operation_name, api_params)[0m
[1;32m    153[0m             [0merror_class[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mexceptions[0m[0;34m.[0m[0mfrom_code[0m[0;34m([0m[0merror_code[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 154[0;31m             [0;32mraise[0m [0merror_class[0m[0;34m([0m[0mparsed_response[0m[0;34m,[0m [0moperation_name[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    155[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mClientError[0m: An error occurred (ExpiredToken) when calling the ListObjectsV2 operation: The provided token has expired.

The above exception was the direct cause of the following exception:

[0;31mPermissionError[0m                           Traceback (most recent call last)
[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/s3fs/core.py[0m in [0;36m_info[0;34m(self, path, bucket, key, refresh, version_id)[0m
[1;32m   1056[0m                     [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1057[0;31m                         [0mout[0m [0;34m=[0m [0;32mawait[0m [0mself[0m[0;34m.[0m[0m_simple_info[0m[0;34m([0m[0mpath[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1058[0m                     [0;32mexcept[0m [0mPermissionError[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/s3fs/core.py[0m in [0;36m_simple_info[0;34m(self, path)[0m
[1;32m    969[0m [0;34m[0m[0m
[0;32m--> 970[0;31m         out = await self._call_s3(
[0m[1;32m    971[0m             [0;34m"list_objects_v2"[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/s3fs/core.py[0m in [0;36m_call_s3[0;34m(self, method, *akwarglist, **kwargs)[0m
[1;32m    264[0m                 [0merr[0m [0;34m=[0m [0me[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 265[0;31m         [0;32mraise[0m [0mtranslate_boto_error[0m[0;34m([0m[0merr[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    266[0m [0;34m[0m[0m

[0;31mPermissionError[0m: The provided token has expired.

During handling of the above exception, another exception occurred:

[0;31mClientError[0m                               Traceback (most recent call last)
[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/s3fs/core.py[0m in [0;36m_call_s3[0;34m(self, method, *akwarglist, **kwargs)[0m
[1;32m    245[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 246[0;31m                 [0mout[0m [0;34m=[0m [0;32mawait[0m [0mmethod[0m[0;34m([0m[0;34m**[0m[0madditional_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    247[0m                 [0;32mreturn[0m [0mout[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/aiobotocore/client.py[0m in [0;36m_make_api_call[0;34m(self, operation_name, api_params)[0m
[1;32m    153[0m             [0merror_class[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mexceptions[0m[0;34m.[0m[0mfrom_code[0m[0;34m([0m[0merror_code[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 154[0;31m             [0;32mraise[0m [0merror_class[0m[0;34m([0m[0mparsed_response[0m[0;34m,[0m [0moperation_name[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    155[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mClientError[0m: An error occurred (400) when calling the HeadObject operation: Bad Request

The above exception was the direct cause of the following exception:

[0;31mOSError[0m                                   Traceback (most recent call last)
[0;32m<ipython-input-6-55ad3039c496>[0m in [0;36m<module>[0;34m[0m
[1;32m      8[0m [0;32mfor[0m [0mstate[0m [0;32min[0m [0msnotel[0m[0;34m.[0m[0mkeys[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m      9[0m     [0mprint[0m[0;34m([0m[0;34mf"Loading state {state}"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 10[0;31m     [0msnotel_depth[0m[0;34m[[0m[0mstate[0m[0;34m][0m [0;34m=[0m [0mload_snotel_txt[0m[0;34m([0m[0mstate[0m[0;34m,[0m [0;34m'depth'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     11[0m     [0msnotel_swe[0m[0;34m[[0m[0mstate[0m[0;34m][0m [0;34m=[0m [0mload_snotel_txt[0m[0;34m([0m[0mstate[0m[0;34m,[0m [0;34m'swe'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m<ipython-input-5-fff3e552e9bc>[0m in [0;36mload_snotel_txt[0;34m(state, var)[0m
[1;32m      5[0m [0;34m[0m[0m
[1;32m      6[0m     [0;31m# open text file[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 7[0;31m     [0mfh[0m [0;34m=[0m [0ms3[0m[0;34m.[0m[0mopen[0m[0;34m([0m[0;34mf"{bucket}/{key}"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      8[0m [0;34m[0m[0m
[1;32m      9[0m     [0;31m# read each line and note those that begin with '#'[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/fsspec/spec.py[0m in [0;36mopen[0;34m(self, path, mode, block_size, cache_options, **kwargs)[0m
[1;32m    960[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    961[0m             [0mac[0m [0;34m=[0m [0mkwargs[0m[0;34m.[0m[0mpop[0m[0;34m([0m[0;34m"autocommit"[0m[0;34m,[0m [0;32mnot[0m [0mself[0m[0;34m.[0m[0m_intrans[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 962[0;31m             f = self._open(
[0m[1;32m    963[0m                 [0mpath[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    964[0m                 [0mmode[0m[0;34m=[0m[0mmode[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/s3fs/core.py[0m in [0;36m_open[0;34m(self, path, mode, block_size, acl, version_id, fill_cache, cache_type, autocommit, requester_pays, **kwargs)[0m
[1;32m    532[0m             [0mcache_type[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mdefault_cache_type[0m[0;34m[0m[0;34m[0m[0m
[1;32m    533[0m [0;34m[0m[0m
[0;32m--> 534[0;31m         return S3File(
[0m[1;32m    535[0m             [0mself[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    536[0m             [0mpath[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/s3fs/core.py[0m in [0;36m__init__[0;34m(self, s3, path, mode, block_size, acl, version_id, fill_cache, s3_additional_kwargs, autocommit, cache_type, requester_pays)[0m
[1;32m   1806[0m                 [0mself[0m[0;34m.[0m[0mdetails[0m [0;34m=[0m [0ms3[0m[0;34m.[0m[0minfo[0m[0;34m([0m[0mpath[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1807[0m                 [0mself[0m[0;34m.[0m[0mversion_id[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mdetails[0m[0;34m.[0m[0mget[0m[0;34m([0m[0;34m"VersionId"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1808[0;31m         super().__init__(
[0m[1;32m   1809[0m             [0ms3[0m[0;34m,[0m [0mpath[0m[0;34m,[0m [0mmode[0m[0;34m,[0m [0mblock_size[0m[0;34m,[0m [0mautocommit[0m[0;34m=[0m[0mautocommit[0m[0;34m,[0m [0mcache_type[0m[0;34m=[0m[0mcache_type[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1810[0m         )

[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/fsspec/spec.py[0m in [0;36m__init__[0;34m(self, fs, path, mode, block_size, autocommit, cache_type, cache_options, **kwargs)[0m
[1;32m   1288[0m         [0;32mif[0m [0mmode[0m [0;34m==[0m [0;34m"rb"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1289[0m             [0;32mif[0m [0;32mnot[0m [0mhasattr[0m[0;34m([0m[0mself[0m[0;34m,[0m [0;34m"details"[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1290[0;31m                 [0mself[0m[0;34m.[0m[0mdetails[0m [0;34m=[0m [0mfs[0m[0;34m.[0m[0minfo[0m[0;34m([0m[0mpath[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1291[0m             [0mself[0m[0;34m.[0m[0msize[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mdetails[0m[0;34m[[0m[0;34m"size"[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m   1292[0m             self.cache = caches[cache_type](

[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/fsspec/asyn.py[0m in [0;36mwrapper[0;34m(*args, **kwargs)[0m
[1;32m     85[0m     [0;32mdef[0m [0mwrapper[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     86[0m         [0mself[0m [0;34m=[0m [0mobj[0m [0;32mor[0m [0margs[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 87[0;31m         [0;32mreturn[0m [0msync[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mloop[0m[0;34m,[0m [0mfunc[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     88[0m [0;34m[0m[0m
[1;32m     89[0m     [0;32mreturn[0m [0mwrapper[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/fsspec/asyn.py[0m in [0;36msync[0;34m(loop, func, timeout, *args, **kwargs)[0m
[1;32m     66[0m         [0;32mraise[0m [0mFSTimeoutError[0m[0;34m[0m[0;34m[0m[0m
[1;32m     67[0m     [0;32mif[0m [0misinstance[0m[0;34m([0m[0mresult[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m,[0m [0mBaseException[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 68[0;31m         [0;32mraise[0m [0mresult[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     69[0m     [0;32mreturn[0m [0mresult[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m     70[0m [0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/fsspec/asyn.py[0m in [0;36m_runner[0;34m(event, coro, result, timeout)[0m
[1;32m     22[0m         [0mcoro[0m [0;34m=[0m [0masyncio[0m[0;34m.[0m[0mwait_for[0m[0;34m([0m[0mcoro[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0mtimeout[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     23[0m     [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 24[0;31m         [0mresult[0m[0;34m[[0m[0;36m0[0m[0;34m][0m [0;34m=[0m [0;32mawait[0m [0mcoro[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     25[0m     [0;32mexcept[0m [0mException[0m [0;32mas[0m [0mex[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     26[0m         [0mresult[0m[0;34m[[0m[0;36m0[0m[0;34m][0m [0;34m=[0m [0mex[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/s3fs/core.py[0m in [0;36m_info[0;34m(self, path, bucket, key, refresh, version_id)[0m
[1;32m   1059[0m                         [0;31m# If the permissions aren't enough for scanning a prefix[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1060[0m                         [0;31m# then fall back to using normal HEAD_OBJECT[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1061[0;31m                         [0mout[0m [0;34m=[0m [0;32mawait[0m [0mself[0m[0;34m.[0m[0m_version_aware_info[0m[0;34m([0m[0mpath[0m[0;34m,[0m [0mversion_id[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1062[0m                 [0;32mif[0m [0mout[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1063[0m                     [0;32mreturn[0m [0mout[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/s3fs/core.py[0m in [0;36m_version_aware_info[0;34m(self, path, version_id)[0m
[1;32m   1002[0m [0;34m[0m[0m
[1;32m   1003[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1004[0;31m             out = await self._call_s3(
[0m[1;32m   1005[0m                 [0;34m"head_object"[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1006[0m                 [0mself[0m[0;34m.[0m[0mkwargs[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/srv/conda/envs/notebook/lib/python3.8/site-packages/s3fs/core.py[0m in [0;36m_call_s3[0;34m(self, method, *akwarglist, **kwargs)[0m
[1;32m    263[0m             [0;32mexcept[0m [0mException[0m [0;32mas[0m [0me[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    264[0m                 [0merr[0m [0;34m=[0m [0me[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 265[0;31m         [0;32mraise[0m [0mtranslate_boto_error[0m[0;34m([0m[0merr[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    266[0m [0;34m[0m[0m
[1;32m    267[0m     [0mcall_s3[0m [0;34m=[0m [0msync_wrapper[0m[0;34m([0m[0m_call_s3[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mOSError[0m: [Errno 22] Bad Request
OSError: [Errno 22] Bad Request

